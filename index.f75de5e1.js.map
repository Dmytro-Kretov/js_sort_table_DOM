{"mappings":"AAAA;AAEA,MAAM,UAAU,SAAS,gBAAgB,CAAC;AAC1C,MAAM,QAAQ,SAAS,aAAa,CAAC;AAErC,MAAM,eAAe,CAAC,KAAK;IACzB,MAAM,WAAW,IAAI,QAAQ,CAAC,MAAM,CAAC,SAAS;IAC9C,OAAO,SAAS,UAAU,CAAC,OAAO,WAAW,SAAS,OAAO,CAAC,SAAS,OAAO;AAChF;AAEA,QAAQ,OAAO,CAAC,CAAC,QAAQ;IACvB,OAAO,gBAAgB,CAAC,SAAS;QAC/B,MAAM,OAAO,MAAM,IAAI,CAAC,MAAM,gBAAgB,CAAC;QAE/C,KAAK,IAAI,CAAC,CAAC,MAAM;YACf,MAAM,QAAQ,aAAa,MAAM;YACjC,MAAM,QAAQ,aAAa,MAAM;YAEjC,OAAO,OAAO,UAAU,YAAY,OAAO,UAAU,WACjD,QAAQ,QACR,MAAM,aAAa,CAAC;QAC1B;QAEA,MAAM,SAAS,GAAG;QAClB,KAAK,OAAO,CAAC,CAAC,MAAQ,MAAM,WAAW,CAAC;IAC1C;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst headers = document.querySelectorAll('thead th');\nconst tbody = document.querySelector('tbody');\n\nconst getCellValue = (row, index) => {\n  const cellText = row.children[index].innerText;\n  return cellText.startsWith('$') ? parseFloat(cellText.replace(/[$,]/g, '')) : cellText;\n};\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n\n    rows.sort((rowA, rowB) => {\n      const cellA = getCellValue(rowA, index);\n      const cellB = getCellValue(rowB, index);\n\n      return typeof cellA === 'number' && typeof cellB === 'number'\n        ? cellA - cellB\n        : cellA.localeCompare(cellB);\n    });\n\n    tbody.innerHTML = '';\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}