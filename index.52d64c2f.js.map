{"mappings":"ACEA,IAAM,EAAU,SAAS,gBAAgB,CAAC,YACpC,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAe,SAAC,CAAA,CAAK,CAA3B,EACE,IAAM,EAAW,EAAI,QAAQ,CAAC,EAAM,CAAC,SAAS,CAE9C,OAAO,EAAS,UAAU,CAAC,KACvB,WAAW,EAAS,OAAO,CAAC,QAAS,KACrC,CACN,EAEA,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OAE/C,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAQ,EAAa,EAAM,GAC3B,EAAQ,EAAa,EAAM,GAEjC,MAAO,AAAiB,UAAjB,OAAO,GAAsB,AAAiB,UAAjB,OAAO,EACvC,EAAQ,EACR,EAAM,aAAa,CAAC,EAC1B,GAEA,EAAM,SAAS,CAAG,GAClB,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAC1C,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar headers = document.querySelectorAll(\"thead th\");\nvar tbody = document.querySelector(\"tbody\");\nvar getCellValue = function(row, index) {\n    var cellText = row.children[index].innerText;\n    return cellText.startsWith(\"$\") ? parseFloat(cellText.replace(/[$,]/g, \"\")) : cellText;\n};\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n        rows.sort(function(rowA, rowB) {\n            var cellA = getCellValue(rowA, index);\n            var cellB = getCellValue(rowB, index);\n            return typeof cellA === \"number\" && typeof cellB === \"number\" ? cellA - cellB : cellA.localeCompare(cellB);\n        });\n        tbody.innerHTML = \"\";\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.52d64c2f.js.map\n","'use strict';\n\nconst headers = document.querySelectorAll('thead th');\nconst tbody = document.querySelector('tbody');\n\nconst getCellValue = (row, index) => {\n  const cellText = row.children[index].innerText;\n\n  return cellText.startsWith('$')\n    ? parseFloat(cellText.replace(/[$,]/g, ''))\n    : cellText;\n};\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n\n    rows.sort((rowA, rowB) => {\n      const cellA = getCellValue(rowA, index);\n      const cellB = getCellValue(rowB, index);\n\n      return typeof cellA === 'number' && typeof cellB === 'number'\n        ? cellA - cellB\n        : cellA.localeCompare(cellB);\n    });\n\n    tbody.innerHTML = '';\n    rows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":["headers","document","querySelectorAll","tbody","querySelector","getCellValue","row","index","cellText","children","innerText","startsWith","parseFloat","replace","forEach","header","addEventListener","rows","Array","from","sort","rowA","rowB","cellA","cellB","localeCompare","innerHTML","appendChild"],"version":3,"file":"index.52d64c2f.js.map"}